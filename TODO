* extension: exile nested directories
* safe move
* exile a b c
* option to show actions, but do not perform
* redesign with a fs model 
* check for multiple links, which could happen after a dir copy
* security
* restructured-text check
* inline doc standards
* extension: export a regular file
* bug: .exile has root as extra level of nesting (only on openbsd?)
* guard against concurrent operations.
* add license
* convert scripts to subcommands. use shell alias for backwards compatibility
* fix no_root traceback
* add filetree compare utility to tests

08/14/2016 Goals
----------------
Upgrade to a professional quality project with code on pypi.

0.0.3
-----
Improve documentation language.

0.0.4
-----
Add testsuite.

Normal operation alters the file system, so I need to build and destroy testbeds.

The general testing scheme for a test is

    * setup a file tree
    * do some sequence of exile and pardon commands
    * check the result
    * cleanup

0.0.5
-----
Fix bug: empty .exile/project directory not removed

This wasn't really a bug before, as I designed the code to leave the
empty directory. I have since changed my mind. Now the empty directory
raises an error in the testsuite.

0.1.0
-----
Convert setup.py from distutils to setuptools

0.1.1
-----
Use path.XXX instead of os.path.XXX

0.1.2
-----
Migrate code to a package

0.1.3
-----
Code golf

0.2.0
-----
Convert invocation to use shell subcommands.

Where before I would do

    $ pardon abc

now I do

    $ exiler pardon abc

0.2.X
-----
Clean-up.

I have made a mess. Why?

* no abstract design and no method
* argparse is verbose and opaque
* With unittest, it is hard to prevent code duplication and still be readable
* file organization and naming is strange
* setuptools has a lot of magic and cruft

0.2.1
-----
Factor common arg parsing

0.2.2
-----
Rename files

After thinking about it too long, I renamed the exiler command to
'occ', which means nothing. I also renamed the package from exiler to
exile.

0.2.3
-----
Improve testing code


