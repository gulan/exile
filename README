Move and Symlink Directories
----------------------------
I like to keep all of my programming projects under a single
directory. Each project gets its own sub-directory. The arrangement
gives me just one place to look for code that I wrote.

I really want my projects to have just my code, and no code written by
someone else. But some tools assume otherwise. Virtualenv for Python
is one example. After running `virtualenv PY27`, I have something
like::

  ~/projects/my-project/
     PY27/
     README
     setup.py
     ...

But now `pip` install will 'pollute' my project with a bunch of code
that I did not write. My own gdg tool is also a source of pollution as
it makes many backup file copies.

The solution is simple for any UNIX-like system: use symbolic links.

Under the `~/projects` directory is a special directory called `.exile`. The
directories in `.exile` have the same name as the directories under
projects, excepting `.exile` itself::

  ~/projects/
       a-proj/
       b-proj/
       c-proj/
       .exile/
           a-proj/
           b-proj/
           c-proj/

Say I want to exile directory `~/projects/a-proj/PY27`::

  cd ~/projects/a-proj
  occ exile -r ~/projects PY27

The result is::

  ~/projects/
       a-proj/PY27 --> ~/projects/.exile/PY27   # symbolic link
       b-proj/
       c-proj/
       .exile/
           a-proj/PY27/
           b-proj/
           c-proj/

The -r option gives the projects root directory. This value can also
be given as an environment variable::

    export EXILER_ROOT='~/projects'

With this setting, I can just do::

  occ exile PY27

The exile subcommand will create the .exile/a-proj/ directory, if it
does not exist. It will then move the PY27 directory there and make a
symlink in its original location to point to it.

Currently, only immediate subdirectories of a project may be
exiled. There are certainly times when I would like to exile a deeper
subdirectory by itself. I also may wish to exile a regular file. I
plan to add these features to a future release, after a bout of
careful design.

The 'pardon' command is the logical inverse of exile. It will move the
exile directory back to its original location. The sequence::

  occ exile PY27 ; occ pardon PY27

has no net effect.

